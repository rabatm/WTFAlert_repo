name: Deploy Laravel App to Hostinger

on:
  push:
    branches:
      - r7hostinger

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code from repository
        uses: actions/checkout@v4

      - name: 🐘 Setup PHP on GitHub runner
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, bcmath, zip, pdo_mysql

      # 🚀 Copier SEULEMENT le dossier "app" vers public_html sur Hostinger
      - name: 📤 Deploy Laravel app folder to Hostinger via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USERNAME }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: ${{ secrets.HOSTINGER_PORT }}
          script: |
            echo "🏁 Starting deployment of Laravel app to public_html..."

            # Aller dans le répertoire home pour cloner/pull
            cd /home/u967840829
            # Cloner ou pull le repository
            if [ ! -d "WTFAlert_repo" ]; then
              echo "📥 Cloning repository for the first time..."
              git clone -b r7hostinger https://github.com/rabatm/WTFAlert_repo.git
            else
              echo "📥 Pulling latest changes..."
              cd WTFAlert_repo
              git pull origin r7hostinger
              cd ..
            fi

            # Définir les chemins
            REPO_PATH="/home/u967840829/WTFAlert_repo"
            PUBLIC_HTML="/home/u967840829/domains/r7alerte.surikwat.fr/public_html"

            # Sauvegarder les fichiers critiques
            echo "💾 Backing up critical files..."
            BACKUP_DIR="/home/u967840829/backup_$(date +%Y%m%d_%H%M%S)"
            mkdir -p $BACKUP_DIR

            if [ -f "$PUBLIC_HTML/.env" ]; then
              cp "$PUBLIC_HTML/.env" "$BACKUP_DIR/.env"
              echo "📋 .env backed up"
            fi

            if [ -f "$PUBLIC_HTML/.htaccess" ]; then
              cp "$PUBLIC_HTML/.htaccess" "$BACKUP_DIR/.htaccess"
              echo "📋 .htaccess backed up"
            fi

            if [ -f "$PUBLIC_HTML/index.php" ]; then
              cp "$PUBLIC_HTML/index.php" "$BACKUP_DIR/index.php"
              echo "📋 index.php backed up"
            fi

            # Nettoyer public_html (garder seulement les fichiers critiques)
            echo "🧹 Cleaning public_html..."
            cd $PUBLIC_HTML
            find . -mindepth 1 \( -name ".env*" -o -name ".htaccess" -o -name "index.php" \) -prune -o -exec rm -rf {} + 2>/dev/null || true

            # Copier tout le contenu de WTFAlert vers public_html
            echo "📁 Copying Laravel app to public_html..."
            cp -r $REPO_PATH/WTFAlert/* $PUBLIC_HTML/

            # Copier le contenu du dossier public à la racine de public_html
            echo "📂 Moving public folder content to public_html root..."
            if [ -d "$PUBLIC_HTML/public" ]; then
              cp -r $PUBLIC_HTML/public/* $PUBLIC_HTML/
              rm -rf $PUBLIC_HTML/public
              echo "✅ Public folder content moved to root"
            fi

            # Restaurer les fichiers critiques
            echo "🔄 Restoring critical files..."
            if [ -f "$BACKUP_DIR/.env" ]; then
              cp "$BACKUP_DIR/.env" "$PUBLIC_HTML/.env"
              echo "📋 .env restored"
            fi

            if [ -f "$BACKUP_DIR/.htaccess" ]; then
              cp "$BACKUP_DIR/.htaccess" "$PUBLIC_HTML/.htaccess"
              echo "📋 .htaccess restored"
            fi

            if [ -f "$BACKUP_DIR/index.php" ]; then
              cp "$BACKUP_DIR/index.php" "$PUBLIC_HTML/index.php"
              echo "📋 index.php restored"
            fi

            # Aller dans public_html pour les opérations Laravel
            cd $PUBLIC_HTML

            # Installation des dépendances Composer
            echo "📦 Installing Composer dependencies..."
            composer2 install --no-interaction --optimize-autoloader --no-dev

            # Générer la clé d'application si nécessaire
            if [ ! -f ".env" ]; then
              cp .env.example .env
              php artisan key:generate
              echo "🔑 Application key generated"
            fi

            # Migrations de base de données
            echo "🗄️ Running database migrations..."
            php artisan migrate --force

            # Clear et recache des configurations
            echo "🧹 Clearing and rebuilding caches..."
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan optimize

            # Permissions des dossiers critiques Laravel
            echo "🔐 Setting proper permissions..."
            chmod -R 775 storage bootstrap/cache

            # Si tu as des queues
            php artisan queue:restart || echo "⚠️ Queue restart skipped"

            # Sortir du mode maintenance
            php artisan up

            # Nettoyer le dossier de backup
            rm -rf $BACKUP_DIR
            # Nettoyer le dépôt temporaire pour économiser l'espace disque
            echo "🧹 Cleaning up temporary repository..."
            rm -rf $REPO_PATH

            echo "✅ Laravel app is now live in public_html!"
      - name: 🔔 Notify deployment success
        if: success()
        run: |
          echo "🎉 Laravel app deployed successfully to Hostinger!"
          echo "👨‍💻 Deployed by: ${{ github.actor }}"
          echo "📁 Content from 'app' folder is now in public_html"
      - name: 💥 Notify deployment failure
        if: failure()
        run: |
          echo "❌ Deployment failed!"
          echo "👨‍💻 Attempted by: ${{ github.actor }}"
